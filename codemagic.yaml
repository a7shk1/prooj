workflows:
  ios-release-app-only:
    name: iOS Release - APP only (no signing)
    max_build_duration: 60
    instance_type: mac_mini_m2

    environment:
      flutter: 3.35.4
      xcode: latest

    scripts:
      - name: Doctor & deps
        script: |
          set -e
          flutter doctor -v
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Ensure iOS platform (auto-create if missing)
        script: |
          set -e
          if [ ! -f ios/Podfile ]; then
            echo "No Podfile found. Recreating iOS platform..."
            rm -rf ios
            flutter create --platforms=ios .
          fi

      - name: Patch Podfile (platform 13 + use_frameworks static)
        script: |
          set -e
          PODFILE="ios/Podfile"
          if grep -q "^platform :ios" "$PODFILE"; then
            sed -i '' -e "s/^platform :ios.*/platform :ios, '13.0'/" "$PODFILE"
          else
            printf "platform :ios, '13.0'\n%s" "$(cat "$PODFILE")" > "$PODFILE"
          fi
          if grep -q "^use_frameworks!" "$PODFILE"; then
            sed -i '' -e "s/^use_frameworks!.*/use_frameworks! :linkage => :static/" "$PODFILE"
          else
            awk 'NR==1{print; print "use_frameworks! :linkage => :static"; next}1' "$PODFILE" > "$PODFILE.tmp" && mv "$PODFILE.tmp" "$PODFILE"
          fi
          echo "=== Podfile ==="; head -n 20 "$PODFILE" || true

      - name: Reinstall CocoaPods cleanly
        script: |
          set -e
          cd ios
          rm -rf Pods Podfile.lock
          pod repo update
          pod install
          cd ..

      - name: Xcode build (no signing) → force output to ./build
        script: |
          set -e
          # نبني ونفرض نواتج المترجم داخل مجلد ./build لسهولة الالتقاط
          xcodebuild \
            -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build \
            build \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_IDENTITY="" \
            DEVELOPMENT_TEAM="" \
            PROVISIONING_PROFILE_SPECIFIER="" \
            IPHONEOS_DEPLOYMENT_TARGET=13.0

          echo "=== Candidates under ./build ==="
          find build -maxdepth 4 -type d -name "Runner.app" -print || true

      - name: Collect Runner.app (zip for artifact)
        script: |
          set -e
          # نحاول المسار القياسي أولاً
          APP_DIR="build/Build/Products/Release-iphoneos/Runner.app"
          if [ ! -d "$APP_DIR" ]; then
            # نبحث عن أي Runner.app ضمن ./build كخطة بديلة
            APP_DIR=$(find build -type d -name "Runner.app" | head -n1 || true)
          fi
          if [ -z "$APP_DIR" ] || [ ! -d "$APP_DIR" ]; then
            echo "Runner.app not found anywhere under ./build"
            exit 1
          fi
          echo "Found: $APP_DIR"
          /usr/bin/zip -r -y Runner.app.zip "$APP_DIR"

    artifacts:
      - Runner.app.zip                      # ملف واحد أكيد يظهر
      - build/**/Runner.app                 # وكمان نعرض المجلد إن رغبت
      - build/Build/Products/**             # لمراجعة أي نواتج إضافية

    publishing:
      email:
        recipients:
          - ahmed.289ahmed@gmail.com
